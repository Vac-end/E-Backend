"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Group = exports.Grade = exports.Attendance = exports.Schedule = exports.Submission = exports.Assignment = exports.RefreshToken = exports.Activity = exports.Progress = exports.Evaluation = exports.Lesson = exports.Module = exports.Course = exports.User = exports.sequelize = void 0;
const db_config_1 = require("../config/db.config");
Object.defineProperty(exports, "sequelize", { enumerable: true, get: function () { return db_config_1.sequelize; } });
const user_model_1 = require("./user.model");
Object.defineProperty(exports, "User", { enumerable: true, get: function () { return user_model_1.User; } });
const course_model_1 = require("./course.model");
Object.defineProperty(exports, "Course", { enumerable: true, get: function () { return course_model_1.Course; } });
const module_model_1 = require("./module.model");
Object.defineProperty(exports, "Module", { enumerable: true, get: function () { return module_model_1.Module; } });
const lesson_model_1 = require("./lesson.model");
Object.defineProperty(exports, "Lesson", { enumerable: true, get: function () { return lesson_model_1.Lesson; } });
const evaluation_model_1 = require("./evaluation.model");
Object.defineProperty(exports, "Evaluation", { enumerable: true, get: function () { return evaluation_model_1.Evaluation; } });
const progress_model_1 = require("./progress.model");
Object.defineProperty(exports, "Progress", { enumerable: true, get: function () { return progress_model_1.Progress; } });
const activity_model_1 = require("./activity.model");
Object.defineProperty(exports, "Activity", { enumerable: true, get: function () { return activity_model_1.Activity; } });
const refreshtoken_model_1 = require("./refreshtoken.model");
Object.defineProperty(exports, "RefreshToken", { enumerable: true, get: function () { return refreshtoken_model_1.RefreshToken; } });
const assignment_model_1 = require("./assignment.model");
Object.defineProperty(exports, "Assignment", { enumerable: true, get: function () { return assignment_model_1.Assignment; } });
const submission_model_1 = require("./submission.model");
Object.defineProperty(exports, "Submission", { enumerable: true, get: function () { return submission_model_1.Submission; } });
const schedule_model_1 = require("./schedule.model");
Object.defineProperty(exports, "Schedule", { enumerable: true, get: function () { return schedule_model_1.Schedule; } });
const attendance_model_1 = require("./attendance.model");
Object.defineProperty(exports, "Attendance", { enumerable: true, get: function () { return attendance_model_1.Attendance; } });
const grade_model_1 = require("./grade.model");
Object.defineProperty(exports, "Grade", { enumerable: true, get: function () { return grade_model_1.Grade; } });
const group_model_1 = require("./group.model");
Object.defineProperty(exports, "Group", { enumerable: true, get: function () { return group_model_1.Group; } });
// Relaciones basadas en los requerimientos del proyecto (historias de usuario, RF y NF)
user_model_1.User.hasMany(course_model_1.Course, { foreignKey: 'createdBy', as: 'CreatedCourses' });
course_model_1.Course.belongsTo(user_model_1.User, { foreignKey: 'createdBy', as: 'Creator' });
course_model_1.Course.hasMany(module_model_1.Module, { foreignKey: 'courseId', as: 'Modules' });
module_model_1.Module.belongsTo(course_model_1.Course, { foreignKey: 'courseId', as: 'Course' });
module_model_1.Module.hasMany(lesson_model_1.Lesson, { foreignKey: 'moduleId', as: 'Lessons' });
lesson_model_1.Lesson.belongsTo(module_model_1.Module, { foreignKey: 'moduleId', as: 'Module' });
lesson_model_1.Lesson.hasMany(evaluation_model_1.Evaluation, { foreignKey: 'lessonId', as: 'Evaluations' });
evaluation_model_1.Evaluation.belongsTo(lesson_model_1.Lesson, { foreignKey: 'lessonId', as: 'Lesson' });
user_model_1.User.hasMany(progress_model_1.Progress, { foreignKey: 'userId', as: 'Progresses' });
progress_model_1.Progress.belongsTo(user_model_1.User, { foreignKey: 'userId', as: 'User' });
lesson_model_1.Lesson.hasMany(progress_model_1.Progress, { foreignKey: 'lessonId', as: 'Progresses' });
progress_model_1.Progress.belongsTo(lesson_model_1.Lesson, { foreignKey: 'lessonId', as: 'Lesson' });
user_model_1.User.hasMany(activity_model_1.Activity, { foreignKey: 'userId', as: 'Activities' });
activity_model_1.Activity.belongsTo(user_model_1.User, { foreignKey: 'userId', as: 'User' });
user_model_1.User.hasMany(refreshtoken_model_1.RefreshToken, { foreignKey: 'userId', as: 'RefreshTokens' });
refreshtoken_model_1.RefreshToken.belongsTo(user_model_1.User, { foreignKey: 'userId', as: 'User' });
course_model_1.Course.hasMany(assignment_model_1.Assignment, { foreignKey: 'courseId', as: 'Assignments' });
assignment_model_1.Assignment.belongsTo(course_model_1.Course, { foreignKey: 'courseId', as: 'Course' });
assignment_model_1.Assignment.hasMany(submission_model_1.Submission, { foreignKey: 'assignmentId', as: 'Submissions' });
submission_model_1.Submission.belongsTo(assignment_model_1.Assignment, { foreignKey: 'assignmentId', as: 'Assignment' });
user_model_1.User.hasMany(submission_model_1.Submission, { foreignKey: 'studentId', as: 'Submissions' });
submission_model_1.Submission.belongsTo(user_model_1.User, { foreignKey: 'studentId', as: 'Student' });
course_model_1.Course.hasMany(schedule_model_1.Schedule, { foreignKey: 'courseId', as: 'Schedules' });
schedule_model_1.Schedule.belongsTo(course_model_1.Course, { foreignKey: 'courseId', as: 'Course' });
schedule_model_1.Schedule.hasMany(attendance_model_1.Attendance, { foreignKey: 'scheduleId', as: 'Attendances' });
attendance_model_1.Attendance.belongsTo(schedule_model_1.Schedule, { foreignKey: 'scheduleId', as: 'Schedule' });
user_model_1.User.hasMany(attendance_model_1.Attendance, { foreignKey: 'studentId', as: 'Attendances' });
attendance_model_1.Attendance.belongsTo(user_model_1.User, { foreignKey: 'studentId', as: 'Student' });
submission_model_1.Submission.hasOne(grade_model_1.Grade, { foreignKey: 'submissionId', as: 'Grade' });
grade_model_1.Grade.belongsTo(submission_model_1.Submission, { foreignKey: 'submissionId', as: 'Submission' });
user_model_1.User.hasMany(grade_model_1.Grade, { foreignKey: 'teacherId', as: 'GradesGiven' });
grade_model_1.Grade.belongsTo(user_model_1.User, { foreignKey: 'teacherId', as: 'Teacher' });
group_model_1.Group.hasMany(user_model_1.User, { foreignKey: 'groupId', as: 'Members' });
user_model_1.User.belongsTo(group_model_1.Group, { foreignKey: 'groupId', as: 'Group' });
// Relaci√≥n muchos-a-muchos para inscripciones en cursos (estudiantes en cursos)
course_model_1.Course.belongsToMany(user_model_1.User, { through: 'CourseUsers', foreignKey: 'courseId', otherKey: 'userId', as: 'EnrolledUsers' });
user_model_1.User.belongsToMany(course_model_1.Course, { through: 'CourseUsers', foreignKey: 'userId', otherKey: 'courseId', as: 'EnrolledCourses' });
//# sourceMappingURL=index.js.map